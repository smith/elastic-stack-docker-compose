# [OpenTelemetry collector configuration](https://opentelemetry.io/docs/collector/configuration/)
#
# This is extra configuration meant to be loaded _after_ the copy of https://github.com/elastic/elastic-agent/tree/main/internal/pkg/otel/samples/linux/logs_metrics_traces.yml in this repository.
# [Receivers](https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver#readme)
receivers:
  filelog/eslogs:
    include:
      - /usr/share/elastic-agent/logs/es/*
    resource:
      data_stream.dataset: elasticsearch
      db.system.name: elasticsearch
      elasticsearch.node.name: elastic-stack-docker-compose-es-node-0
      service.name: elasticsearch
  filelog/kibanalogs:
    operators:
      - type: json_parser
        severity:
          parse_from: attributes.log.level
    include:
      - /usr/share/elastic-agent/logs/kibana/*
    resource:
      data_stream.dataset: kibana
      service.name: kibana
  filelog/otelcollogs:
    operators:
      - type: json_parser
        severity:
          parse_from: attributes.level
    include:
      - /usr/share/elastic-agent/otelcol.log
    resource:
      data_stream.dataset: otelcol
      service.name: otelcol
  httpcheck:
    targets:
      - endpoint: https://elastic:${env:ELASTIC_PASSWORD}@elasticsearch:${env:ES_PORT}
        tls:
          ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
      - endpoint: https://kibana:${env:KIBANA_PORT}/api/status
        tls:
          ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
    # TODO: fix http check for collector (See https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckextension/README.md)
    # - endpoint: http://otelcol:${env:OTEL_COLLECTOR_PORT_GRPC}
    #   tls:
    #     ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
    #     cert_file: /usr/share/elastic-agent/config/certs/elasticsearch/elasticsearch.crt
    #     key_file: /usr/share/elastic-agent/config/certs/elasticsearch/elasticsearch.key
  hostmetrics/system:
    collection_interval: 5s # default is 30; this is faster
    root_path: /
  nop: {}
  # [OTLP Receiver](https://github.com/open-telemetry/opentelemetry-collector/blob/main/receiver/otlpreceiver/README.md)
  otlp:
    protocols:
      grpc:
        endpoint: otelcol:${env:OTEL_COLLECTOR_PORT_GRPC}
      http:
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"
        endpoint: otelcol:${env:OTEL_COLLECTOR_PORT_HTTP}
# [Processors](https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor#readme)
processors: {}
# [Exporters](https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter#readme)
exporters:
  # [Debug exporter](https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/debugexporter/README.md)
  debug:
    verbosity: basic
  # [Elasticsearch exporter](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/elasticsearchexporter/README.md)
  elasticsearch/ecs:
    sending_queue:
      enabled: true
    tls:
      ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
      insecure_skip_verify: true
  elasticsearch/otel:
    sending_queue:
      enabled: true
    tls:
      ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
      insecure_skip_verify: true
  otlp/apmserver:
    endpoint: apmserver:${env:ELASTIC_APM_SERVER_PORT}
    tls:
      insecure: true
# [Service Section](https://opentelemetry.io/docs/collector/configuration/#service)
service:
  pipelines:
    logs/eslogs:
      receivers:
        - filelog/eslogs
      processors:
        - resourcedetection
      exporters:
        - elasticsearch/otel
        - debug
    logs/kibanalogs:
      receivers:
        - filelog/kibanalogs
      processors:
        - resourcedetection
      exporters:
        - elasticsearch/otel
        - debug
    logs/otelcollogs:
      receivers:
        - filelog/otelcollogs
      processors:
        - resourcedetection
      exporters:
        - elasticsearch/otel
        - debug
    logs/platformlogs:
      receivers: [nop]
    metrics/httpcheck:
      receivers:
        - httpcheck
      processors:
        - resourcedetection
      exporters:
        - elasticsearch/otel
        - debug
    # Send traces to APM server
    # traces:
    #   receivers:
    #     - otlp
    #   processors: []
    #   exporters:
    #     - otlp/apmserver
    #     - debug
    # Uncomment this to enable traces without the elastictraceprocessor.
    # traces:
    #   receivers:
    #     - otlp
    #   processors: []
    #   exporters:
    #     - elasticapm
    #     - elasticsearch/otel
    #     - debug
  telemetry:
    logs:
      disable_stacktrace: true
      encoding: json
      output_paths: ["stdout", "stderr", "otelcol.log"]
      level: WARN
